{"version":3,"sources":["TodoInput.js","TodoItem.js","TodoList.js","CompleteAll.js","TodosFilter.js","ClearCompleted.js","App.js","index.js"],"names":["TodoInput","state","inputValue","handleInputChange","event","_this","setState","target","value","handleOnSubmit","preventDefault","title","trim","props","addTodo","react_default","a","createElement","onSubmit","this","className","placeholder","onChange","React","Component","TodoItem","_ref","todo","markTodoCompleted","deleteTodo","type","id","concat","checked","completed","htmlFor","onClick","TodoList","todos","map","key","src_TodoItem","CompleteAll","isCompletedAll","markAllCompleted","Fragment","TodosFilter","selected","handleAllClick","filterTodos","handleActiveClick","handleCompletedClick","href","ClearCompleted","completedCount","clearCompleted","style","display","App","selectedFilter","prevState","Object","toConsumableArray","Date","isCheckedAll","objectSpread2","isChecked","todoId","filter","_this$state","notCompletedCount","length","visibleTodos","src_TodoInput","src_CompleteAll","every","src_TodoList","src_TodosFilter","src_ClearCompleted","ReactDOM","render","src_App","document","getElementById"],"mappings":"iRA8CeA,6MA1CbC,MAAQ,CACNC,WAAY,MAGdC,kBAAoB,SAACC,GACnBC,EAAKC,SAAS,CACZJ,WAAYE,EAAMG,OAAOC,WAI7BC,eAAiB,SAACL,GAChBA,EAAMM,iBAEN,IAAMC,EAAQN,EAAKJ,MAAMC,WAAWU,OAE/BD,IAILN,EAAKQ,MAAMC,QAAQH,GAEnBN,EAAKC,SAAS,CACZJ,WAAY,+EAKd,OACEa,EAAAC,EAAAC,cAAA,QAAMC,SAAUC,KAAKV,gBACnBM,EAAAC,EAAAC,cAAA,SACEG,UAAU,WACVC,YAAY,yBACZb,MAAOW,KAAKlB,MAAMC,WAClBoB,SAAUH,KAAKhB,4BAlCDoB,IAAMC,WC8BfC,EA9BE,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAMC,EAATF,EAASE,kBAAmBC,EAA5BH,EAA4BG,WAA5B,OACfd,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACbL,EAAAC,EAAAC,cAAA,SACEa,KAAK,WACLV,UAAU,SACVW,GAAE,QAAAC,OAAUL,EAAKI,IACjBE,QAASN,EAAKO,UACdZ,SAAU,SAAClB,GACTwB,EAAkBxB,EAAMG,OAAO0B,QAASN,EAAKI,OAGjDhB,EAAAC,EAAAC,cAAA,SAAOkB,QAAO,QAAAH,OAAUL,EAAKI,KAAOJ,EAAKhB,OACzCI,EAAAC,EAAAC,cAAA,UACEa,KAAK,SACLV,UAAU,UACVgB,QAAS,kBAAMP,EAAWF,EAAKI,SCMtBM,EApBE,SAAAX,GAAA,IAAGY,EAAHZ,EAAGY,MAAOV,EAAVF,EAAUE,kBAAmBC,EAA7BH,EAA6BG,WAA7B,OACfd,EAAAC,EAAAC,cAAA,MAAIG,UAAU,aACXkB,EAAMC,IAAI,SAAAZ,GAAI,OACbZ,EAAAC,EAAAC,cAAA,MAAIuB,IAAKb,EAAKI,GAAIX,UAAWO,EAAKO,UAAY,YAAc,IAC1DnB,EAAAC,EAAAC,cAACwB,EAAD,CACEd,KAAMA,EACNC,kBAAmBA,EACnBC,WAAYA,SCYPa,EApBK,SAAAhB,GAAA,IAAGiB,EAAHjB,EAAGiB,eAAgBC,EAAnBlB,EAAmBkB,iBAAnB,OAClB7B,EAAAC,EAAAC,cAAAF,EAAAC,EAAA6B,SAAA,KACE9B,EAAAC,EAAAC,cAAA,SACEa,KAAK,WACLC,GAAG,aACHX,UAAU,aACVa,QAASU,EACTrB,SAAU,SAAAlB,GAAK,OAAIwC,EAAiBxC,EAAMG,OAAO0B,YAEnDlB,EAAAC,EAAAC,cAAA,SAAOkB,QAAQ,cAAf,0BCqEWW,6MA7Eb7C,MAAQ,CACN8C,SAAU,SAGZC,eAAiB,SAAC5C,GAChBA,EAAMM,iBAENL,EAAKQ,MAAMoC,YAAY,OAEvB5C,EAAKC,SAAS,CACZyC,SAAU,WAIdG,kBAAoB,SAAC9C,GACnBA,EAAMM,iBAENL,EAAKQ,MAAMoC,aAAY,GAEvB5C,EAAKC,SAAS,CACZyC,SAAU,cAIdI,qBAAuB,SAAC/C,GACtBA,EAAMM,iBAENL,EAAKQ,MAAMoC,aAAY,GAEvB5C,EAAKC,SAAS,CACZyC,SAAU,uFAIL,IACCA,EAAa5B,KAAKlB,MAAlB8C,SAER,OACEhC,EAAAC,EAAAC,cAAA,MAAIG,UAAU,WACZL,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KACEmC,KAAK,QACLhC,UAAwB,QAAb2B,EAAqB,WAAa,GAC7CX,QAASjB,KAAK6B,gBAHhB,QASFjC,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KACEmC,KAAK,WACLhC,UAAwB,WAAb2B,EAAwB,WAAa,GAChDX,QAASjB,KAAK+B,mBAHhB,WASFnC,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KACEmC,KAAK,cACLhC,UAAwB,cAAb2B,EAA2B,WAAa,GACnDX,QAASjB,KAAKgC,sBAHhB,sBA7DgB5B,IAAMC,WCiBjB6B,EAjBQ,SAAA3B,GAAA,IAAG4B,EAAH5B,EAAG4B,eAAgBC,EAAnB7B,EAAmB6B,eAAnB,OAErBxC,EAAAC,EAAAC,cAAA,UACEa,KAAK,SACLV,UAAU,kBACVoC,MAAOF,EAAiB,EAAI,CAAEG,QAAS,SAAY,CAAEA,QAAS,QAC9DrB,QAASmB,GAJX,oBCmIaG,6MAhIbzD,MAAQ,CACNqC,MAAO,GACPqB,eAAgB,SAGlB7C,QAAU,SAACH,GACTN,EAAKC,SAAS,SAAAsD,GAAS,MAAK,CAC1BtB,MAAK,GAAAN,OAAA6B,OAAAC,EAAA,EAAAD,CACAD,EAAUtB,OADV,CAEH,CACE3B,QACAoB,IAAK,IAAIgC,KACT7B,WAAW,WAMnBU,iBAAmB,SAACoB,GAClB3D,EAAKC,SAAS,SAAAsD,GAAS,MAAK,CAC1BtB,MAAOsB,EAAUtB,MAAMC,IAAI,SAAAZ,GAAI,OAAAkC,OAAAI,EAAA,EAAAJ,CAAA,GAC1BlC,EAD0B,CAE7BO,UAAW8B,YAKjBpC,kBAAoB,SAACsC,EAAWC,GAC9B9D,EAAKC,SAAS,SAAAsD,GAAS,MAAK,CAC1BtB,MAAOsB,EAAUtB,MAAMC,IAAI,SAACZ,GAC1B,OAAIA,EAAKI,KAAOoC,EACPxC,EAGFkC,OAAAI,EAAA,EAAAJ,CAAA,GACFlC,EADL,CAEEO,UAAWgC,YAMnBrC,WAAa,SAACsC,GACZ9D,EAAKC,SAAS,SAAAsD,GAAS,MAAK,CAC1BtB,MAAOsB,EAAUtB,MAAM8B,OAAO,SAAAzC,GAAI,OAAIA,EAAKI,KAAOoC,UAItDlB,YAAc,SAACmB,GACb/D,EAAKC,SAAS,CACZqD,eAAgBS,OAIpBb,eAAiB,SAACnD,GAChBA,EAAMM,iBAENL,EAAKC,SAAS,SAAAsD,GAAS,MAAK,CAC1BtB,MAAOsB,EAAUtB,MAAM8B,OAAO,SAAAzC,GAAI,OAAuB,IAAnBA,EAAKO,wFAItC,IAAAmC,EAC2BlD,KAAKlB,MAA/BqC,EADD+B,EACC/B,MAAOqB,EADRU,EACQV,eAETW,EAAoBhC,EACvB8B,OAAO,SAAAzC,GAAI,OAAuB,IAAnBA,EAAKO,YAAqBqC,OACtCjB,EAAiBhB,EACpB8B,OAAO,SAAAzC,GAAI,OAAuB,IAAnBA,EAAKO,YAAoBqC,OACrCC,EAAelC,EAClB8B,OAAO,SAAAzC,GAAI,MAAuB,QAAnBgC,GACXhC,EAAKO,YAAcyB,IAE1B,OACE5C,EAAAC,EAAAC,cAAA,WAASG,UAAU,WACjBL,EAAAC,EAAAC,cAAA,UAAQG,UAAU,UAChBL,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAACwD,EAAD,CAAW3D,QAASK,KAAKL,WAG3BC,EAAAC,EAAAC,cAAA,WACEG,UAAU,OACVoC,MAAwB,IAAjBlB,EAAMiC,OACT,CAAEd,QAAS,QACX,CAAEA,QAAS,UAGf1C,EAAAC,EAAAC,cAACyD,EAAD,CACE/B,eAAgBL,EAAMqC,MAAM,SAAAhD,GAAI,OAAIA,EAAKO,YACzCU,iBAAkBzB,KAAKyB,mBAGzB7B,EAAAC,EAAAC,cAAC2D,EAAD,CACEtC,MAAOkC,EACP5C,kBAAmBT,KAAKS,kBACxBC,WAAYV,KAAKU,cAKrBd,EAAAC,EAAAC,cAAA,UACEG,UAAU,SACVoC,MAAwB,IAAjBlB,EAAMiC,OACT,CAAEd,QAAS,QACX,CAAEA,QAAS,UAGf1C,EAAAC,EAAAC,cAAA,QAAMG,UAAU,cACbkD,EACA,IAFH,cAMAvD,EAAAC,EAAAC,cAAC4D,EAAD,CACE5B,YAAa9B,KAAK8B,cAGpBlC,EAAAC,EAAAC,cAAC6D,EAAD,CACExB,eAAgBA,EAChBC,eAAgBpC,KAAKoC,0BAxHfhC,IAAMC,WCDxBuD,IAASC,OACPjE,EAAAC,EAAAC,cAACgE,EAAD,MACAC,SAASC,eAAe","file":"static/js/main.1c6e0b30.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass TodoInput extends React.Component {\n  state = {\n    inputValue: '',\n  }\n\n  handleInputChange = (event) => {\n    this.setState({\n      inputValue: event.target.value,\n    });\n  }\n\n  handleOnSubmit = (event) => {\n    event.preventDefault();\n\n    const title = this.state.inputValue.trim();\n\n    if (!title) {\n      return;\n    }\n\n    this.props.addTodo(title);\n\n    this.setState({\n      inputValue: '',\n    });\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleOnSubmit}>\n        <input\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          value={this.state.inputValue}\n          onChange={this.handleInputChange}\n        />\n      </form>\n    );\n  }\n}\n\nTodoInput.propTypes = { addTodo: PropTypes.func.isRequired };\n\nexport default TodoInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TodoItem = ({ todo, markTodoCompleted, deleteTodo }) => (\n  <div className=\"view\">\n    <input\n      type=\"checkbox\"\n      className=\"toggle\"\n      id={`todo-${todo.id}`}\n      checked={todo.completed}\n      onChange={(event) => {\n        markTodoCompleted(event.target.checked, todo.id);\n      }}\n    />\n    <label htmlFor={`todo-${todo.id}`}>{todo.title}</label>\n    <button\n      type=\"button\"\n      className=\"destroy\"\n      onClick={() => deleteTodo(todo.id)}\n    />\n  </div>\n);\n\nTodoItem.propTypes = {\n  todo: PropTypes.objectOf(PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.bool,\n  ])).isRequired,\n  markTodoCompleted: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './TodoItem';\n\nconst TodoList = ({ todos, markTodoCompleted, deleteTodo }) => (\n  <ul className=\"todo-list\">\n    {todos.map(todo => (\n      <li key={todo.id} className={todo.completed ? 'completed' : ''}>\n        <TodoItem\n          todo={todo}\n          markTodoCompleted={markTodoCompleted}\n          deleteTodo={deleteTodo}\n        />\n      </li>\n    ))}\n  </ul>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  markTodoCompleted: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst CompleteAll = ({ isCompletedAll, markAllCompleted }) => (\n  <>\n    <input\n      type=\"checkbox\"\n      id=\"toggle-all\"\n      className=\"toggle-all\"\n      checked={isCompletedAll}\n      onChange={event => markAllCompleted(event.target.checked)}\n    />\n    <label htmlFor=\"toggle-all\">\n      Mark all as complete\n    </label>\n  </>\n);\n\nCompleteAll.propTypes = {\n  isCompletedAll: PropTypes.bool.isRequired,\n  markAllCompleted: PropTypes.func.isRequired,\n};\n\nexport default CompleteAll;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass TodosFilter extends React.Component {\n  state = {\n    selected: 'all',\n  }\n\n  handleAllClick = (event) => {\n    event.preventDefault();\n\n    this.props.filterTodos('all');\n\n    this.setState({\n      selected: 'all',\n    });\n  }\n\n  handleActiveClick = (event) => {\n    event.preventDefault();\n\n    this.props.filterTodos(false);\n\n    this.setState({\n      selected: 'active',\n    });\n  }\n\n  handleCompletedClick = (event) => {\n    event.preventDefault();\n\n    this.props.filterTodos(true);\n\n    this.setState({\n      selected: 'completed',\n    });\n  }\n\n  render() {\n    const { selected } = this.state;\n\n    return (\n      <ul className=\"filters\">\n        <li>\n          <a\n            href=\"#/all\"\n            className={selected === 'all' ? 'selected' : ''}\n            onClick={this.handleAllClick}\n          >\n            All\n          </a>\n        </li>\n\n        <li>\n          <a\n            href=\"#/active\"\n            className={selected === 'active' ? 'selected' : ''}\n            onClick={this.handleActiveClick}\n          >\n            Active\n          </a>\n        </li>\n\n        <li>\n          <a\n            href=\"#/completed\"\n            className={selected === 'completed' ? 'selected' : ''}\n            onClick={this.handleCompletedClick}\n          >\n            Completed\n          </a>\n        </li>\n      </ul>\n    );\n  }\n}\n\nTodosFilter.propTypes = {\n  filterTodos: PropTypes.func.isRequired,\n};\n\nexport default TodosFilter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ClearCompleted = ({ completedCount, clearCompleted }) => (\n\n  <button\n    type=\"button\"\n    className=\"clear-completed\"\n    style={completedCount > 0 ? { display: 'block' } : { display: 'none' }}\n    onClick={clearCompleted}\n  >\n    Clear completed\n  </button>\n);\n\nClearCompleted.propTypes = {\n  completedCount: PropTypes.number.isRequired,\n  clearCompleted: PropTypes.func.isRequired,\n};\n\nexport default ClearCompleted;\n","import React from 'react';\nimport TodoInput from './TodoInput';\nimport TodoList from './TodoList';\nimport CompleteAll from './CompleteAll';\nimport TodosFilter from './TodosFilter';\nimport ClearCompleted from './ClearCompleted';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedFilter: 'all',\n  }\n\n  addTodo = (title) => {\n    this.setState(prevState => ({\n      todos: [\n        ...prevState.todos,\n        {\n          title,\n          id: +new Date(),\n          completed: false,\n        },\n      ],\n    }));\n  };\n\n  markAllCompleted = (isCheckedAll) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map(todo => ({\n        ...todo,\n        completed: isCheckedAll,\n      })),\n    }));\n  }\n\n  markTodoCompleted = (isChecked, todoId) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map((todo) => {\n        if (todo.id !== todoId) {\n          return todo;\n        }\n\n        return {\n          ...todo,\n          completed: isChecked,\n        };\n      }),\n    }));\n  }\n\n  deleteTodo = (todoId) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => todo.id !== todoId),\n    }));\n  }\n\n  filterTodos = (filter) => {\n    this.setState({\n      selectedFilter: filter,\n    });\n  }\n\n  clearCompleted = (event) => {\n    event.preventDefault();\n\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => todo.completed === false),\n    }));\n  }\n\n  render() {\n    const { todos, selectedFilter } = this.state;\n\n    const notCompletedCount = todos\n      .filter(todo => todo.completed === false).length;\n    const completedCount = todos\n      .filter(todo => todo.completed === true).length;\n    const visibleTodos = todos\n      .filter(todo => selectedFilter === 'all'\n        || todo.completed === selectedFilter);\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n          <TodoInput addTodo={this.addTodo} />\n        </header>\n\n        <section\n          className=\"main\"\n          style={todos.length === 0\n            ? { display: 'none' }\n            : { display: 'block' }}\n        >\n\n          <CompleteAll\n            isCompletedAll={todos.every(todo => todo.completed)}\n            markAllCompleted={this.markAllCompleted}\n          />\n\n          <TodoList\n            todos={visibleTodos}\n            markTodoCompleted={this.markTodoCompleted}\n            deleteTodo={this.deleteTodo}\n          />\n\n        </section>\n\n        <footer\n          className=\"footer\"\n          style={todos.length === 0\n            ? { display: 'none' }\n            : { display: 'block' }}\n        >\n\n          <span className=\"todo-count\">\n            {notCompletedCount}\n            {' '}\n            items left\n          </span>\n\n          <TodosFilter\n            filterTodos={this.filterTodos}\n          />\n\n          <ClearCompleted\n            completedCount={completedCount}\n            clearCompleted={this.clearCompleted}\n          />\n\n        </footer>\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}